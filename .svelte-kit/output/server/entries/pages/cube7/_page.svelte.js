import { c as create_ssr_component, e as escape, n as null_to_empty } from "../../../chunks/ssr.js";
const _page_svelte_svelte_type_style_lang = "";
const css = {
  code: '.svelte-1zr3ac::before,.svelte-1zr3ac::after{box-sizing:border-box;margin:0;padding:0}.dis.svelte-1zr3ac{color:#fe0374;font-weight:bold;font-size:28px}.play.svelte-1zr3ac{color:yellow;font-weight:bold;font-size:28px}.light.svelte-1zr3ac{color:rgb(172, 231, 243)\n}.cell.svelte-1zr3ac{justify-content:center;align-items:center;display:flex;font-family:Arial;font-size:3rem;font-weight:bold;background:white}.o0.svelte-1zr3ac::before{width:60px;font-size:42px;font-weight:bold;background-color:orange;content:"o0"}.o1.svelte-1zr3ac::before{font-size:42px;font-weight:bold;background-color:orange;content:"o1"}.o2.svelte-1zr3ac::before{font-size:42px;font-weight:bold;background-color:orange;content:"o2"}.o3.svelte-1zr3ac::before{font-size:42px;font-weight:bold;background-color:orange;content:"o3"}.o4.svelte-1zr3ac::before{font-size:42px;font-weight:bold;background-color:orange;content:"o4"}.o5.svelte-1zr3ac::before{font-size:42px;font-weight:bold;background-color:orange;content:"o5"}.o6.svelte-1zr3ac::before{font-size:42px;font-weight:bold;background-color:orange;content:"o6"}.o7.svelte-1zr3ac::before{font-size:40px;font-weight:bold;background-color:orange;content:"o7"}.o8.svelte-1zr3ac::before{font-size:40px;font-weight:bold;background-color:orange;content:"o8"}.r0.svelte-1zr3ac::before{font-size:40px;font-weight:bold;background-color:red;content:"r0"}.r1.svelte-1zr3ac::before{font-size:40px;font-weight:bold;background-color:red;content:"r1"}.r2.svelte-1zr3ac::before{font-size:40px;font-weight:bold;background-color:red;content:"r2"}.r3.svelte-1zr3ac::before{font-size:40px;font-weight:bold;background-color:red;content:"r3"}.r4.svelte-1zr3ac::before{font-size:40px;font-weight:bold;background-color:red;content:"r4"}.r5.svelte-1zr3ac::before{font-size:40px;font-weight:bold;background-color:red;content:"r5"}.r6.svelte-1zr3ac::before{font-size:40px;font-weight:bold;background-color:red;content:"r6"}.r7.svelte-1zr3ac::before{font-size:40px;font-weight:bold;background-color:red;content:"r7"}.r8.svelte-1zr3ac::before{font-size:40px;font-weight:bold;background-color:red;content:"r8"}.g0.svelte-1zr3ac::before{color:yellow;font-size:40px;font-weight:bold;background-color:green;content:"g0"}.g1.svelte-1zr3ac::before{color:yellow;font-size:40px;font-weight:bold;background-color:green;content:"g1"}.g2.svelte-1zr3ac::before{color:yellow;font-size:40px;font-weight:bold;background-color:green;content:"g2"}.g3.svelte-1zr3ac::before{color:yellow;font-size:40px;font-weight:bold;background-color:green;content:"g3"}.g4.svelte-1zr3ac::before{color:yellow;font-size:40px;font-weight:bold;background-color:green;content:"g4"}.g5.svelte-1zr3ac::before{color:yellow;font-size:40px;font-weight:bold;background-color:green;content:"g5"}.g6.svelte-1zr3ac::before{color:yellow;font-size:40px;font-weight:bold;background-color:green;content:"g6"}.g7.svelte-1zr3ac::before{color:yellow;font-size:40px;font-weight:bold;background-color:green;content:"g7"}.g8.svelte-1zr3ac::before{color:yellow;font-size:40px;font-weight:bold;background-color:green;content:"g8"}.b0.svelte-1zr3ac::before{color:yellow;font-size:40px;font-weight:bold;background-color:blue;content:"b0"}.b1.svelte-1zr3ac::before{color:yellow;font-size:40px;font-weight:bold;background-color:blue;content:"b1"}.b2.svelte-1zr3ac::before{color:yellow;font-size:42px;font-weight:bold;background-color:blue;content:"b2"}.b3.svelte-1zr3ac::before{color:yellow;font-size:42px;font-weight:bold;background-color:blue;content:"b3"}.b4.svelte-1zr3ac::before{color:yellow;font-size:42px;font-weight:bold;background-color:blue;content:"b4"}.b5.svelte-1zr3ac::before{color:yellow;font-size:42px;font-weight:bold;background-color:blue;content:"b5"}.b6.svelte-1zr3ac::before{color:yellow;font-size:42px;font-weight:bold;background-color:blue;content:"b6"}.b7.svelte-1zr3ac::before{color:yellow;font-size:42px;font-weight:bold;background-color:blue;content:"b7"}.b8.svelte-1zr3ac::before{color:yellow;font-size:42px;font-weight:bold;background-color:blue;content:"b8"}.y0.svelte-1zr3ac::before{color:blue;font-size:42px;font-weight:bold;background-color:yellow;content:"y0"}.y1.svelte-1zr3ac::before{color:blue;font-size:42px;font-weight:bold;background-color:yellow;content:"y1"}.y2.svelte-1zr3ac::before{color:blue;font-size:42px;font-weight:bold;background-color:yellow;content:"y2"}.y3.svelte-1zr3ac::before{color:blue;font-size:42px;font-weight:bold;background-color:yellow;content:"y3"}.y4.svelte-1zr3ac::before{color:blue;font-size:42px;font-weight:bold;background-color:yellow;content:"y4"}.y5.svelte-1zr3ac::before{color:blue;font-size:42px;font-weight:bold;background-color:yellow;content:"y5"}.y6.svelte-1zr3ac::before{color:blue;font-size:42px;font-weight:bold;background-color:yellow;content:"y6"}.y7.svelte-1zr3ac::before{color:blue;font-size:42px;font-weight:bold;background-color:yellow;content:"y7"}.y8.svelte-1zr3ac::before{color:blue;font-size:42px;font-weight:bold;background-color:yellow;content:"y8"}.w0.svelte-1zr3ac::before{color:black;font-size:42px;font-weight:bold;background-color:white;content:"w0"}.w1.svelte-1zr3ac::before{color:black;font-size:42px;font-weight:bold;background-color:white;content:"w1"}.w2.svelte-1zr3ac::before{color:black;font-size:42px;font-weight:bold;background-color:white;content:"w2"}.w3.svelte-1zr3ac::before{color:black;font-size:42px;font-weight:bold;background-color:white;content:"w3"}.w4.svelte-1zr3ac::before{color:black;font-size:42px;font-weight:bold;background-color:white;content:"w4"}.w5.svelte-1zr3ac::before{color:black;font-size:42px;font-weight:bold;background-color:white;content:"w5"}.w6.svelte-1zr3ac::before{color:black;font-size:42px;font-weight:bold;background-color:white;content:"w6"}.w7.svelte-1zr3ac::before{color:black;font-size:42px;font-weight:bold;background-color:white;content:"w7"}.w8.svelte-1zr3ac::before{color:black;font-size:42px;font-weight:bold;background-color:white;content:"w8"}.blue.svelte-1zr3ac{height:60px;width:60px;background-color:lightblue;display:inline;border-radius:10px}.green.svelte-1zr3ac{height:60px;width:60px;background-color:lightgreen;display:inline;border-radius:10px}.red.svelte-1zr3ac{height:60px;width:60px;background-color:rgb(252, 97, 97);border-radius:10px}.orange.svelte-1zr3ac{height:60px;width:60px;background-color:orange;border-radius:10px}.yellow.svelte-1zr3ac{height:60px;width:60px;background-color:yellow;display:inline;border-radius:10px}.white.svelte-1zr3ac{height:60px;width:60px;background-color:white;border-radius:10px}.container.svelte-1zr3ac{width:198px;height:198px;perspective:1000px;margin-right:7%;color:aqua}.grid.svelte-1zr3ac{display:grid;grid-template-columns:repeat(3, 60px);grid-template-rows:repeat(3, 60px);grid-gap:7px;justify-content:center}.grid2.svelte-1zr3ac{display:grid;grid-template-columns:repeat(3, 190px);grid-template-rows:repeat(3, 190px);grid-gap:5px;justify-content:center}.cube2.svelte-1zr3ac{transform-style:preserve-3d;width:100%;height:100%;position:relative;transform:rotateX(-30deg) rotateY(150deg)}.cube4.svelte-1zr3ac{transform-style:preserve-3d;width:100%;height:100%;position:relative;transform:rotateX(-30deg) rotateY(60deg)}.cube3.svelte-1zr3ac{transform-style:preserve-3d;width:100%;height:100%;position:relative;transform:rotateX(-30deg) rotateY(240deg)}.cube1.svelte-1zr3ac{transform-style:preserve-3d;width:100%;height:100%;position:relative;transform:rotateX(-25deg) rotateY(335deg)}.cube5.svelte-1zr3ac{transform-style:preserve-3d;width:100%;height:100%;position:relative;transform:rotateX(-210deg) rotateY(30deg)}.cube6.svelte-1zr3ac{transform-style:preserve-3d;width:100%;height:100%;position:relative;transform:rotateX(-210deg) rotateY(120deg)}.cube7.svelte-1zr3ac{transform-style:preserve-3d;width:100%;height:100%;position:relative;transform:rotateX(-210deg) rotateY(210deg)}.cube8.svelte-1zr3ac{transform-style:preserve-3d;width:100%;height:100%;position:relative;transform:rotateX(-210deg) rotateY(300deg)}.face.svelte-1zr3ac{position:absolute;width:100%;height:100%;background-color:grey}.top.svelte-1zr3ac{transform:rotateX(90deg) translateZ(100px)}.bottom.svelte-1zr3ac{transform:rotateX(-90deg) translateZ(100px)}.right.svelte-1zr3ac{transform:rotateY(90deg) translateZ(100px)}.left.svelte-1zr3ac{transform:rotateY(-90deg) translateZ(100px)}.front.svelte-1zr3ac{transform:rotateX(0deg) translateZ(100px)}.back.svelte-1zr3ac{transform:rotateX(-180deg) translateZ(100px)}@keyframes svelte-1zr3ac-spin{from{transform:rotateX(0deg) rotateY(0deg)}to{transform:rotateX(360deg) rotateY(360deg)}}.rite.svelte-1zr3ac{float:right}.col-3.svelte-1zr3ac{position:fixed;right:12%;top:20%;width:35%}#steady.svelte-1zr3ac{position:fixed;top:180px;left:75.5%}div.svelte-1zr3ac{color:blue}h2.svelte-1zr3ac{text-align:center;font-size:40px;color:rgb(255, 134, 198)}',
  map: null
};
const b0 = "blue";
const b1 = "blue";
const b2 = "blue";
const b3 = "blue";
const b4 = "blue";
const b5 = "blue";
const b6 = "blue";
const b7 = "blue";
const b8 = "blue";
const g0 = "green";
const g1 = "green";
const g2 = "green";
const g3 = "green";
const g4 = "green";
const g5 = "green";
const g6 = "green";
const g7 = "green";
const g8 = "green";
const r0 = "red";
const r1 = "red";
const r2 = "red";
const r3 = "red";
const r4 = "red";
const r5 = "red";
const r6 = "red";
const r7 = "red";
const r8 = "red";
const o0 = "orange";
const o1 = "orange";
const o2 = "orange";
const o3 = "orange";
const o4 = "orange";
const o5 = "orange";
const o6 = "orange";
const o7 = "orange";
const o8 = "orange";
const y0 = "yellow";
const y1 = "yellow";
const y2 = "yellow";
const y3 = "yellow";
const y4 = "yellow";
const y5 = "yellow";
const y6 = "yellow";
const y7 = "yellow";
const y8 = "yellow";
const w0 = "white";
const w1 = "white";
const w2 = "white";
const w3 = "white";
const w4 = "white";
const w5 = "white";
const w6 = "white";
const w7 = "white";
const w8 = "white";
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let Sally;
  var dF3x = () => {
  };
  var dF3ar = () => {
  };
  var bb = [b0, b1, b2, b3, b4, b5, b6, b7, b8];
  var gg = [g0, g1, g2, g3, g4, g5, g6, g7, g8];
  var rr = [r0, r1, r2, r3, r4, r5, r6, r7, r8];
  var oo = [o0, o1, o2, o3, o4, o5, o6, o7, o8];
  var yy = [y0, y1, y2, y3, y4, y5, y6, y7, y8];
  var ww = [w0, w1, w2, w3, w4, w5, w6, w7, w8];
  let m = M([bb, gg, rr, oo, yy, ww]);
  JSON.parse(JSON.stringify([bb, gg, rr, oo, yy, ww]));
  function M(x, ar = []) {
    return function go(func) {
      if (func === dF3x)
        return x;
      if (func === dF3ar)
        return ar;
      else
        x = func(x);
      ar.push(func);
      return go;
    };
  }
  var test7 = `function M(x, ar = []) {
    return function go(func) {
      if (func === dF3x) return x;
      if (func === dF3ar) return ar;
      else x = func(x);
      ar.push(func);
        console.log(m(dF3ar) === ar); // true
      return go;
    };
  };`;
  var reverseCode = `function reverse () { 
    let fu = m(dF3ar).pop(); 
    // Removes the function being reversed from x.
    let foo = v => fu(fu(fu(v))); 
    // foo is the inverse of fu.
    m(foo)(dF3ar).pop();     
    // After x = foo(x) reverses fu, foo is popped off of ar.
    m = m;
};`;
  var newMcode = `  function M(x, ar = []) {
      return function go(func) {
        if (func === dF3x) return x;
        if (func === dF3ar) return ar;
        else x = func(x);
        ar.push(func);
        return go;
      };
    }; 
    
    let m = M(x)`;
  var cu;
  cu = "cube1";
  var Mdis = `    function M (x) {
      return function`;
  var Mplay = `              go (func) {
        if (func === dF3x) return x;
        else x = func(x);
        return go;
      }`;
  var Mend = `    }
    const dF3x = () => {}; `;
  $$result.css.add(css);
  Sally = m(dF3ar).length;
  return ` <section class="columns svelte-1zr3ac"><div style="width: 70%" class="svelte-1zr3ac"> <p class="svelte-1zr3ac" data-svelte-h="svelte-723ui7">A closure referred to as &quot;m-M(x)&quot;, where m = M( [bb,gg,rr,oo,yy,ww] ) and bb, gg, rr, oo, yy, and ww are nine-member arrays of the strings &quot;blue, green, red, orange, yellow, and white&quot; respectively, encapsulates a representation of the state of a Rubik&#39;s cube (definition below, result on the right). The recursive function &quot;m&quot; operates on pure functions that rearrange the strings in x without causing side effects, other than those affecting the DOM and manifested in the browser on the right.</p> <p class="svelte-1zr3ac" data-svelte-h="svelte-h8gbsy">The representation of the Rubik&#39;s cube encapsulated in the m-M(x) closure is embedded in the 54 divs of the DOM representation of the cube in the form m(dF3x)[j][k]. These strings designate CSS class selectors with background-color = m(dF3x)[j][k]. Rearranging the strings in m-M(x) closure automatically changes what is seen in the browser.</p> <pre class="dis svelte-1zr3ac">${escape(Mdis)}</pre> <pre class="play svelte-1zr3ac" id="yes">${escape(Mplay)}</pre> <pre class="dis svelte-1zr3ac">${escape(Mend)}</pre> <button class="svelte-1zr3ac" data-svelte-h="svelte-1jnjc72">Start</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-kmdmj9">Scramble</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-1ay5zeu">Reverse</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-1pw1i2x">Back To Scr</button>   <span style="font-size:25px" class="svelte-1zr3ac" data-svelte-h="svelte-vofde9">     Move list length:</span> <span style="font-weight:bold; font-size:30px" class="svelte-1zr3ac">${escape(Sally)}</span> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-1ytdt8u">X rotate</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-fv4c5m">Y rotate</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-xqrqyy">Z rotate</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-13rc2a">X back</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-4kq9v0">Y back</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-heexc6">Z back</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-10ubajs">U</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-18ura3s">D</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-1hf5pbg">R</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-149me3s">L</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-80z8fo">F</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-hbzaek">B</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-gbf468">M</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-13lki2n">E</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-ys53bk">S</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-1x3dq93">U&#39;</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-1iy7aqp">D&#39;</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-xska2l">R&#39;</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-1cn9s0x">L&#39;</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-gp43fp">F&#39;</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-1ogbqjh">B&#39;</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-1i74kg1">M&#39;</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-1a28l4a">E&#39;</button> <button class="svelte-1zr3ac" data-svelte-h="svelte-nov1z9">S&#39;</button> <div style="margin-left: 1px" class="svelte-1zr3ac"><p class="svelte-1zr3ac" data-svelte-h="svelte-of5caz">Pressing the u, d, r, l, f, b,  m, e, s, x, y, and z keys has the same effect as clicking the corresponding (capitalized) buttons. Holding down the &quot;Shift&quot; key (or activating &quot;CapsLock&quot;) while pressing the keys causes the reverse effect. Pressing v, w, and q is equivalent to clicking on Start, Scramble, and Reverse, respectively.</p> <p class="svelte-1zr3ac" data-svelte-h="svelte-1pn80h3">Clicking on either of two left corners of each face of the cube causes that face to rotate counterclockwise 90 degrees. Clicking on either of two right corners of each face of the cube causes that face to rotate clockwise 90 degrees. Clicking on edges rotates the centers rather than faces. Clicking on the centers of the right, top, and front rotates the entire cube on the X, Y and Z axes, respectively. Clicking the center of any face makes it rotate clockwise.</p> <p class="svelte-1zr3ac" data-svelte-h="svelte-jx6unx">Of course, nothing actually rotates. Rearranging references to strings in the m-M(x) closure creates the illusion in the browser that part or all of the cube rotated.</p> <h2 style="text-align: center;" class="svelte-1zr3ac" data-svelte-h="svelte-kdgcfz">Some Algorithm Shortcuts</h2><p class="svelte-1zr3ac"></p> <button class="svelte-1zr3ac" data-svelte-h="svelte-108yb3w">PLL Corners: R&#39; F R&#39; B2 R F&#39; R&#39; B2 R2</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-16mrlal">Triangle Clockwise: M2 U&#39; M U2 M&#39; U&#39; M2</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-1ympwjf">Triangle CounterClockwise: M2 U M U2 M&#39; U M2</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-1jweezu">Edges Opposite: M M Uz M M U U M M Uz M M</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-37evo0">Edges Adjacent: M M U M M U M U U M M U U M U U</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-xuw1nc">doubleFish R&#39; F R B&#39; R&#39; F&#39; R B</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-zy6rkl">Sune: R U R&#39; U R U2 R&#39;</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-1t25e7z">Antisune: R U2 R&#39; U&#39; R U&#39; R&#39;</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-131h37e">Sexy: R U R&#39; U&#39;</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-vlyvsh">Reverse Sexy: U R U&#39; R&#39;</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-1ricpm9">Revolve: U R U&#39; L&#39; U R&#39; U&#39; L</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-erya4w">Reverse Revolve: L&#39; U R U&#39; L U R&#39; U&#39;</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-1f9p2o0">Sledgehammer: R&#39; F R F&#39;</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-1iy72hs">oppositeHeadlights1: R U R&#39; U R U&#39; R&#39; U R U U R&#39;</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-9wy69r">oppositeHeadlights2: R U U R&#39; U&#39; R U R&#39; U&#39; R U U&#39; R&#39;</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-549j7t">oppositeHeadlights3: F R U R&#39; U&#39; R U R&#39; U&#39; R U R&#39; U&#39; F&#39;</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-1sngs1p">Niklas: R U&#39; L&#39; U R&#39; U&#39; L</button> <br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-173hecp">Reverse Niklas: L&#39; U R U&#39; L U R&#39;</button> <br class="svelte-1zr3ac"> <p class="svelte-1zr3ac">Press the &quot;v&quot; key or click <button class="svelte-1zr3ac" data-svelte-h="svelte-1jnjc72">Start</button> to see each face of the cube with 9 identically colored divs. Click on the <button class="svelte-1zr3ac" data-svelte-h="svelte-b8m5uu">X rotate</button>, <button class="svelte-1zr3ac" data-svelte-h="svelte-11fxfwk">Y rotate</button>, and <button class="svelte-1zr3ac" data-svelte-h="svelte-1fxteei">Z rotate</button> buttons to see the main cube from various angles, or click on the <button class="svelte-1zr3ac" data-svelte-h="svelte-tlb7hw">Rotate A</button> and <button class="svelte-1zr3ac" data-svelte-h="svelte-2f4srj">Rotate B</button> buttons to turn the alternate-view cube. The alternate-view cube (center bottom) can be returned to its starting orientation only be rotations or re-loading this page. <button class="svelte-1zr3ac" data-svelte-h="svelte-1jnjc72">Start</button> will give the sides of the alternate-view cube uniform colors (like the main cube), but its orientation relateve to the main cube doesn&#39;t change. This is by design. Click
  <button class="svelte-1zr3ac" data-svelte-h="svelte-tlb7hw">Rotate A</button>, then <button class="svelte-1zr3ac" data-svelte-h="svelte-kmdmj9">Scramble</button>, and finally, <button class="svelte-1zr3ac" data-svelte-h="svelte-1jnjc72">Start</button>.</p> <p class="svelte-1zr3ac" data-svelte-h="svelte-9z7rgi">See the <a href="./" class="svelte-1zr3ac">previous page</a> for detailed definitions. This page shows how images in the DOM are made to react to rearrangements of the elements of a six nine-member arrays of strings in the script, User mouse clicks and key presses call m(func), where func is some function and m is defined as m = M(x) where x is the array of six nine-member arrays of strings mentioned above.</p></div></div></section> <div id="steady" class="svelte-1zr3ac"><div class="container svelte-1zr3ac"><div class="${escape(null_to_empty(cu), true) + " svelte-1zr3ac"}"><div class="face front svelte-1zr3ac"><div class="grid svelte-1zr3ac"><div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[3][0]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[3][1]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[3][2]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[3][3]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[3][4]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[3][5]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[3][6]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[3][7]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[3][8]), true) + " svelte-1zr3ac"}"></button></div></div></div> <div class="face back svelte-1zr3ac"><div class="grid svelte-1zr3ac"><div class="${escape(null_to_empty(m(dF3x)[2][8]), true) + " svelte-1zr3ac"}"></div> <div class="${escape(null_to_empty(m(dF3x)[2][7]), true) + " svelte-1zr3ac"}"></div> <div class="${escape(null_to_empty(m(dF3x)[2][6]), true) + " svelte-1zr3ac"}"></div> <div class="${escape(null_to_empty(m(dF3x)[2][5]), true) + " svelte-1zr3ac"}"></div> <div class="${escape(null_to_empty(m(dF3x)[2][4]), true) + " svelte-1zr3ac"}"></div> <div class="${escape(null_to_empty(m(dF3x)[2][3]), true) + " svelte-1zr3ac"}"></div> <div class="${escape(null_to_empty(m(dF3x)[2][2]), true) + " svelte-1zr3ac"}"></div> <div class="${escape(null_to_empty(m(dF3x)[2][1]), true) + " svelte-1zr3ac"}"></div> <div class="${escape(null_to_empty(m(dF3x)[2][0]), true) + " svelte-1zr3ac"}"></div></div></div> <div class="face right svelte-1zr3ac"><div class="grid svelte-1zr3ac"><div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][0]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][1]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][2]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][3]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][4]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][5]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][6]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][7]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][8]), true) + " svelte-1zr3ac"}"></button></div></div></div> <div class="face left svelte-1zr3ac"><div class="grid svelte-1zr3ac"><div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][0]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][1]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][2]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][3]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][4]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][5]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][6]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][7]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[0][8]), true) + " svelte-1zr3ac"}"></button></div></div></div> <div class="face top svelte-1zr3ac"><div class="grid svelte-1zr3ac"><div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[4][0]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[4][1]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[4][2]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[4][3]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[4][4]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[4][5]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[4][6]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[4][7]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[4][8]), true) + " svelte-1zr3ac"}"></button></div></div></div> <div class="face bottom svelte-1zr3ac"><div class="grid svelte-1zr3ac"><div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[5][0]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[5][1]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[5][2]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[5][3]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[5][4]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[5][5]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[5][6]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[5][7]), true) + " svelte-1zr3ac"}"></button></div> <div class="svelte-1zr3ac"><button class="${escape(null_to_empty(m(dF3x)[5][8]), true) + " svelte-1zr3ac"}"></button></div></div></div></div> <br class="svelte-1zr3ac"><br class="svelte-1zr3ac"><br class="svelte-1zr3ac"><br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-1jnjc72">Start</button> <br class="svelte-1zr3ac"><br class="svelte-1zr3ac"> <button class="svelte-1zr3ac" data-svelte-h="svelte-kmdmj9">Scramble</button></div></div>  <section class="columns svelte-1zr3ac"><div style="width: 70%" class="svelte-1zr3ac"><p id="cow8" class="svelte-1zr3ac" data-svelte-h="svelte-1htzmg2">Continued from the <a href="./#cow7" class="svelte-1zr3ac">previous page</a></p> <p class="svelte-1zr3ac" data-svelte-h="svelte-1ych37l">Clicking one of the buttons (below) causes the code on its face to execute. For example, clicking on the m = m(L) button causes <br class="svelte-1zr3ac">    (1) m(L) to execute, which causes <br class="svelte-1zr3ac">     (2) x in the m-M(x) closure to mutate into L(x).</p> <p class="svelte-1zr3ac" data-svelte-h="svelte-15bclzn">For the sake of clarity, I&#39;ll spell this out in more than the usual amount of detail: The background color of a button or div can be set with x in the m-M(x) closure in these two ways: background-color = m(dF3x)[a][b] or class = m(df3x)[a][b] where a is 0, 1, 2, 3, 4, or 5 and b is 0 or 8, or any number between 0 and 8. When a and b are in these ranges, the expression m(dF3x)[a][b] resolves to one of these strings: &quot;blue&quot;, &quot;green&quot;, &quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;, or &quot;white&quot;. The classes blue, green, red, orange, yellow, and white have &quot;background-color&quot; elements corresponding to their names. So, for example, on the starting (solved) cube, the expression m(dF3x)[0][0] resolves to the string &quot;blue&quot; causing the statements &quot;style = &#39;background-color: m(dF3x)[0][0]&#39; and &quot;class = &#39;m(dF3x)[0][0]&#39;&quot; to result in blue backgrounds.</p> <p class="svelte-1zr3ac" data-svelte-h="svelte-wug0up">m(dF3x)[3] is x&#39;s nine-element array that, when the cube is solved, has all-orange background colors. The three buttons below have the colors of the first three elements of the third element of x because the buttons contain the statements &quot;style = &#39;m(dF3x)[3][0], m(dF3x)[3][1], and m(dF3x)[3][2]. Notice how the colors of the buttons correspond to those of the top row of the front face of the Rubik&#39;s cube representation. Repeatedly pressing &quot;Scramble&quot; illustrates this.</p> <div class="svelte-1zr3ac"><button style="${"background-color:" + escape(m(dF3x)[3][0], true) + "; color: black; font-size:30px"}" class="svelte-1zr3ac">m = m(F)</button> <button style="${"background-color:" + escape(m(dF3x)[3][1], true) + "; color: black; font-size:30px"}" class="svelte-1zr3ac">m = m(Cx)</button> <button style="${"background-color:" + escape(m(dF3x)[3][2], true) + "; color: black; font-size:30px"}" class="svelte-1zr3ac">m = m(L)</button></div> <h2 class="svelte-1zr3ac" data-svelte-h="svelte-1c0ucvx">Rotating the Left, Back, and Bottom Faces</h2> <p class="svelte-1zr3ac" data-svelte-h="svelte-1wl0lu9">METHOD ONE -- The fastest method:</p> <p class="svelte-1zr3ac" data-svelte-h="svelte-1f9tofm">The left, back, and bottom faces can be turned clockwise by pressing L, B, and D, respectively. Hold down the SHIFT key for counterclockwise rotation.</p> <p class="svelte-1zr3ac" data-svelte-h="svelte-xk9hsn">METHOD TWO -- Rotate, click, and rotate back:</p> <p class="svelte-1zr3ac" data-svelte-h="svelte-1nckq4v">The left face can be rotated by clicking on the top center square three times, clicking on the upper or lower right squares of the white side for a clockwise turn, clicking on the upper and lower left side squares to turn counterclockwise, and finally clicking the top center once if you want to return to the starting orientation.</p> <p class="svelte-1zr3ac" data-svelte-h="svelte-peacg0">The back face can be rotated by clicking the right middle square two times and then clicking left or right upper or lower squares, depending on which way you want it to turn.</p> <p class="svelte-1zr3ac" data-svelte-h="svelte-yp1h4j">The bottom can be rotated by clicking the right center square once, clicking the right or left upper or lower squares for clockwise or counterclockwise rotation respectively. Clicking the right center square three more times returns the cube to its starting orientation.p.</p> <h2 class="svelte-1zr3ac" data-svelte-h="svelte-1lws1lg">The Amazing Reverse Function</h2> <p class="svelte-1zr3ac" data-svelte-h="svelte-1gajoxi">The value held n the closure m-M(x) is transformed whenever a user presses certain keys or mouse-clicks on certain parts of the browser display. These actions call m(func), automatically resulting in the mutation of x into func(x). Such mutations automatically change parts of the DOM where x, exposed as m(dF3x), determines the CSS background-color of elements. This is done directly as &quot;background-color = &#39;m(dF3x)[j][k]&quot; or indirectly as &quot;class = &#39;m(dF3x)[j][k]&quot; for integers j and k in the ranges of 0,6 for j and 0,8 for k.</p> <p class="svelte-1zr3ac" data-svelte-h="svelte-qd1h3b">The definitions of &quot;func&quot; in m(func), as described above, can be found selectively at <a href="./" class="svelte-1zr3ac">Home</a> and comprehensively in the <a href="https://github.com/dschalk/Recursive-Closures" class="svelte-1zr3ac">Github repository</a>. &quot;reverse&quot; works differently. It works with this modified version of M:</p> <pre class="svelte-1zr3ac">${escape(newMcode)}</pre> <p class="svelte-1zr3ac" data-svelte-h="svelte-1j62td8">Clicking the &quot;Reverse&quot; button or pressing the Q key does not directly cause m to run; they just cause &quot;reverse()&quot; to run. m is called twice inside of reverse.</p> <pre class="svelte-1zr3ac">${escape(reverseCode)}</pre> <p class="svelte-1zr3ac" data-svelte-h="svelte-1461swx">The function reverse works because m(dF3ar) passes ar by reference, not value. m(dF3ar) in the &quot;reverse&quot; function refers to the same location in memory as ar in the m-M(x) closure. Logging &quot;m(dF3ar === temp) while running this application illustrates this.</p> <pre class="svelte-1zr3ac">${escape(test7)}</pre> <pre class="svelte-1zr3ac" data-svelte-h="svelte-a5yurk">

















 







 
      </pre></div> <div class="svelte-1zr3ac" data-svelte-h="svelte-z8avoo"></div></section> ${slots.default ? slots.default({}) : ``}`;
});
export {
  Page as default
};

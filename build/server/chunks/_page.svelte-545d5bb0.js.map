{"version":3,"file":"_page.svelte-545d5bb0.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/factors/_page.svelte.js"],"sourcesContent":["import { c as create_ssr_component, e as escape } from \"../../../chunks/ssr.js\";\nconst _page_svelte_svelte_type_style_lang = \"\";\nconst css = {\n  code: \"input.svelte-1rld2h7{margin-left:5%;size:16px;font-size:22px}.big.svelte-1rld2h7{font-size:25px;font-weight:700}.marg.svelte-1rld2h7{margin-left:5%;font-size:22px}p.svelte-1rld2h7{font-size:24px}pre.svelte-1rld2h7{font-size:22px}\",\n  map: null\n};\nconst Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {\n  let ar = [];\n  var display_main = `function main (n) {\n        if (n === 1) return;\n        N = n;\n        var buf = new ArrayBuffer(Math.ceil(N/8));\n        var view = new Uint8Array(buf); \n        var top = Math.ceil(Math.sqrt(N));\n        let i = 2;\n        for(i; i <= N; i+=1){\n            if(test(view, i)) {\n                for(let j = i; j <= N; j+=i) {\n                    set(view, j);\n                    if (j === N) {\n                        ar.push(\" \" + i);\n                        N = N / i;\n                        main(N);\n                    }\n                }\n            }\n        }\n    };\n    \n    function set(ar,i) {\n      var a = Math.floor(i / 8)\n      var b = i % 8\n      ar[a] |= (1 << b)\n    };\n    \n    function test (ar,i) {\n      var a = Math.floor(i / 8);\n      var b = i % 8;\n      var value = ar[a] & (1 << b);\n      return value === 0;\n    }`;\n  let ar2 = [];\n  var code = `let N2 = 1;\n    let ar2 = [];\n    \n    var first2 = function first (e) {\n        ar2 = [];\n        if (e.keyCode == 13) {\n            let num = parseInt(e.target.value);\n            main2(num);\n        };\n    };\n    \n    function main2 (n) {\n        N2 = n;\n        for(let i = 2; i <= N2; i+=1){\n            while (N2 % i === 0) {\n                ar2.push(\" \" + i);\n                N2 = N2 / i;\n                if (N2 == 1) return\n            }\n        }\n    }`;\n  $$result.css.add(css);\n  return `<div style=\"font-family: Times New Roman; text-align: center; font-size: 38px;\" data-svelte-h=\"svelte-1qcx4le\"><br>\n       Two Factorization Algorithms</div> <p class=\"big svelte-1rld2h7\" data-svelte-h=\"svelte-qrbugj\">Efficient Algorithm</p> <p class=\"svelte-1rld2h7\" data-svelte-h=\"svelte-zcyupp\">Enter a number between 2 and a few <span class=\"big svelte-1rld2h7\">quadrillion</span><span>.</span></p> <input type=\"text\" class=\"svelte-1rld2h7\"> <h3 class=\"marg svelte-1rld2h7\">${escape(ar2)}</h3> <p class=\"big svelte-1rld2h7\" data-svelte-h=\"svelte-rb5daq\">Inefficient Algorithm</p> <p class=\"svelte-1rld2h7\" data-svelte-h=\"svelte-pk8e92\">Just for fun, I tried finding factors using bitwise operators instead of &quot;%&quot;, the modulo operater. The Google Chrome engine processed it very slowly.</p> <p class=\"svelte-1rld2h7\" data-svelte-h=\"svelte-5ey14x\">Enter a number between 2 and not much greater than a <span class=\"big svelte-1rld2h7\">billion</span><span>.</span></p> <input type=\"text\" class=\"svelte-1rld2h7\"> <br> <h3 class=\"marg svelte-1rld2h7\">${escape(ar)}</h3> <p class=\"svelte-1rld2h7\" data-svelte-h=\"svelte-13ug16w\">Here&#39;s the code for the more efficient, modulo-operator algorithm:</p> <pre class=\"svelte-1rld2h7\">${escape(code)}</pre> <p class=\"svelte-1rld2h7\" data-svelte-h=\"svelte-m44qop\">This is the code for the bitwise-operator algorithm:</p> <pre class=\"svelte-1rld2h7\">${escape(display_main)}</pre> <a href=\"http://score.schalk.net\" data-svelte-h=\"svelte-1ruktk0\">Game of Score</a>`;\n});\nexport {\n  Page as default\n};\n"],"names":[],"mappings":";;AAEA,MAAM,GAAG,GAAG;AACZ,EAAE,IAAI,EAAE,uOAAuO;AAC/O,EAAE,GAAG,EAAE,IAAI;AACX,CAAC,CAAC;AACG,MAAC,IAAI,GAAG,oBAAoB,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,KAAK;AAC5E,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;AACd,EAAE,IAAI,YAAY,GAAG,CAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC,CAAC;AACP,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC;AACf,EAAE,IAAI,IAAI,GAAG,CAAC;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC,CAAC;AACP,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACxB,EAAE,OAAO,CAAC;AACV,0WAA0W,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,ujBAAujB,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,sKAAsK,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,oJAAoJ,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,yFAAyF,CAAC,CAAC;AACv3C,CAAC;;;;"}